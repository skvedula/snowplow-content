aws:
  # Credentials can be hardcoded or set in environment variables
  access_key_id: <%= ENV['AWS_SNOWPLOW_ACCESS_KEY'] %>
  secret_access_key: <%= ENV['AWS_SNOWPLOW_SECRET_KEY'] %>
  s3:
    region: us-west-2
    buckets:
      assets: s3://snowplow-hosted-assets # DO NOT CHANGE unless you are hosting the jarfiles etc yourself in your own bucket
      jsonpath_assets: s3://ato-snowplow-jsonpaths # If you have defined your own JSON Schemas, add the s3:// path to your own JSON Path files in your own bucket here
      log: s3n://ato-snowplow/etl/logs
      raw:
        in: ["s3n://kinesis-good/events"]              # Multiple in buckets are permitted
        processing: s3://ato-snowplow/etl/processing/
        archive: s3://ato-snowplow/archive/raw     # e.g. s3://my-archive-bucket/raw
      enriched:
        good: s3://ato-snowplow/enriched/good       # e.g. s3://my-out-bucket/enriched/good
        bad: s3://ato-snowplow/enriched/bad        # e.g. s3://my-out-bucket/enriched/bad
        errors: s3://ato-snowplow/enriched/errors     # Leave blank unless :continue_on_unexpected_error: set to true below
        archive: s3://ato-snowplow/enriched/archive    # Where to archive enriched events to, e.g. s3://my-out-bucket/enriched/archive
      shredded:
        good: s3://ato-snowplow/shredded/good       # e.g. s3://my-out-bucket/shredded/good
        bad: s3://ato-snowplow/shredded/bad        # e.g. s3://my-out-bucket/shredded/bad
        errors: s3://ato-snowplow/shredded/errors     # Leave blank unless :continue_on_unexpected_error: set to true below
        archive: s3://ato-snowplow/shredded/archive    # Not required for Postgres currently
  emr:
    ami_version: 3.7.0      # Don't change this
    region: us-west-2        # Always set this
    jobflow_role: EMR_EC2_DefaultRole # Created using $ aws emr create-default-roles
    service_role: EMR_DefaultRole     # Created using $ aws emr create-default-roles
    placement:      # Set this if not running in VPC. Leave blank otherwise
    ec2_subnet_id: subnet-14168c4d # Set this if running in VPC. Leave blank otherwise
    ec2_key_name: snowplow-collector
    bootstrap: []           # Set this to specify custom boostrap actions. Leave empty otherwise
    software:
      hbase:                # To launch on cluster, provide version, "0.92.0", keep quotes
      lingual:              # To launch on cluster, provide version, "1.1", keep quotes
    # Adjust your Hadoop cluster below
    jobflow:
      master_instance_type: m3.2xlarge
      core_instance_count: 4
      core_instance_type: c3.2xlarge
      task_instance_count: 1 # Increase to use spot instances
      task_instance_type: c3.xlarge
      task_instance_bid:  # In USD. Adjust bid, or leave blank for non-spot-priced (i.e. on-demand) task instances
    bootstrap_failure_tries: 3 # Number of times to attempt the job in the event of bootstrap failures
collectors:
  format: thrift # Or 'clj-tomcat' for the Clojure Collector, or 'thrift' for Thrift records, or 'tsv/com.amazon.aws.cloudfront/wd_access_log' for Cloudfront access logs
enrich:
  job_name: ATO Snowplow ETL # Give your job a name
  versions:
    hadoop_enrich: 1.2.0 # Version of the Hadoop Enrichment process
    hadoop_shred: 0.5.0 # Version of the Hadoop Shredding process
  continue_on_unexpected_error: false # Set to 'true' (and set :out_errors: above) if you don't want any exceptions thrown from ETL
  output_compression: NONE # Compression only supported with Redshift, set to NONE if you have Postgres targets. Allowed formats: NONE, GZIP
storage:
  download:
    folder: # Postgres-only config option. Where to store the downloaded files. Leave blank for Redshift
  targets:
    - name: "ATO Clickstream Redshift"
      type: redshift
      host: ato-snowplow-dev.ckwoecd9kwqc.us-west-2.redshift.amazonaws.com # The endpoint as shown in the Redshift console
      database: snowplow # Name of database
      port: 5439 # Default Redshift port
      ssl_mode: disable # One of disable (default), require, verify-ca or verify-full
      table: atomic.events
      username: <%= ENV['AWS_SNOWPLOW_REDSHIFT_USER'] %>
      password: <%= ENV['AWS_SNOWPLOW_REDSHIFT_PW'] %>
      maxerror: 1 # Stop loading on first error, or increase to permit more load errors
      comprows: 200000 # Default for a 1 XL node cluster. Not used unless --include compupdate specified
monitoring:
  tags: {} # Name-value pairs describing this job
  logging:
    level: DEBUG # You can optionally switch to INFO for production
iglu:
  schema: iglu:com.snowplowanalytics.self-desc/schema/jsonschema/1-0-0
  data:
    cache_size: 1000
    repositories:
      - name: "Iglu Central"
        priority: 0
        vendor_prefixes:
          - com.snowplowanalytics
          - com.google
        connection:
          http:
            uri: http://iglucentral.com
      - name: "Nord Iglu repository"
        priority: 5
        vendor_prefixes:
          - com.nordstrom
        connection:
          http:
            uri: http://ato-snowplow-schemas.s3-website-us-west-2.amazonaws.com
